// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TopicMsg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "TopicMsg.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - TopicMsgRoot

@implementation TopicMsgRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - TopicMsgRoot_FileDescriptor

static GPBFileDescriptor *TopicMsgRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - TopicMsg

@implementation TopicMsg

@dynamic id_p;
@dynamic bizSource;
@dynamic topicId;
@dynamic senderId;
@dynamic senderName;
@dynamic reqId;
@dynamic contentType;
@dynamic hasContentData, contentData;
@dynamic sendTime;

typedef struct TopicMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t bizSource;
  int32_t contentType;
  NSString *senderName;
  NSString *reqId;
  TopicMsg_ContentDataProto *contentData;
  int64_t id_p;
  int64_t topicId;
  int64_t senderId;
  int64_t sendTime;
} TopicMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "bizSource",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_BizSource,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, bizSource),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "topicId",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_TopicId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, topicId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "senderId",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_SenderId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, senderId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "senderName",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_SenderName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, senderName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reqId",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_ReqId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, reqId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentType",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_ContentType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, contentType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "contentData",
        .dataTypeSpecific.className = GPBStringifySymbol(TopicMsg_ContentDataProto),
        .number = TopicMsg_FieldNumber_ContentData,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, contentData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "sendTime",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_FieldNumber_SendTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(TopicMsg__storage_, sendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[TopicMsg class]
                                     rootClass:[TopicMsgRoot class]
                                          file:TopicMsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(TopicMsg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\t\000\003\007\000\004\010\000\005\n\000\006\005\000\007\013\000\010\013\000\t\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - TopicMsg_ContentDataProto

@implementation TopicMsg_ContentDataProto

@dynamic msg;
@dynamic rid;
@dynamic thumbnail;
@dynamic viewURL;
@dynamic width;
@dynamic height;

typedef struct TopicMsg_ContentDataProto__storage_ {
  uint32_t _has_storage_[1];
  int32_t width;
  int32_t height;
  NSString *msg;
  NSString *rid;
  NSString *thumbnail;
  NSString *viewURL;
} TopicMsg_ContentDataProto__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_ContentDataProto_FieldNumber_Msg,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(TopicMsg_ContentDataProto__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rid",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_ContentDataProto_FieldNumber_Rid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(TopicMsg_ContentDataProto__storage_, rid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thumbnail",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_ContentDataProto_FieldNumber_Thumbnail,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(TopicMsg_ContentDataProto__storage_, thumbnail),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "viewURL",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_ContentDataProto_FieldNumber_ViewURL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(TopicMsg_ContentDataProto__storage_, viewURL),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "width",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_ContentDataProto_FieldNumber_Width,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(TopicMsg_ContentDataProto__storage_, width),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = TopicMsg_ContentDataProto_FieldNumber_Height,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(TopicMsg_ContentDataProto__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[TopicMsg_ContentDataProto class]
                                     rootClass:[TopicMsgRoot class]
                                          file:TopicMsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(TopicMsg_ContentDataProto__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\004\005!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(TopicMsg)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
